'''
–ù–∞–≤—ã–∫–∏: –§—É–Ω–∫—Ü–∏–∏, —Å—Ç—Ä–æ–∫–∏, —Ü–∏–∫–ª—ã, –≤–µ—Ç–≤–ª–µ–Ω–∏–µ

–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º ‚Äî —Ç–∏–ø–∏—á–Ω–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞. –í–∞–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å, —á—Ç–æ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –ø—Ä–æ–±–µ–ª—ã, —Ä–∞–∑–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä –∏ –¥—Ä—É–≥–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –º–µ—à–∞—Ç—å –∞–Ω–∞–ª–∏–∑—É.

üéØ –£—Å–ª–æ–≤–∏–µ:

–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é is_palindrome(data: str) -> bool, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º. –°—Ç—Ä–æ–∫–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º, –µ—Å–ª–∏ –æ–Ω–∞ —á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ –≤ –æ–±–æ–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö ‚Äî –±–µ–∑ —É—á—ë—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ –∏ –ø—Ä–æ–±–µ–ª–æ–≤.

–ü—Ä–∏–º–µ—Ä:

–ê —Ä–æ–∑–∞ —É–ø–∞–ª–∞ –Ω–∞ –ª–∞–ø—É –ê–∑–æ—Ä–∞ -> True
'''

def is_palindrome(data: str) -> bool:
    temp_str = ''.join(data.lower().split())
    return True if temp_str == temp_str[::-1] else False

test = '–ê    —Ä–æ–∑–∞  —É–ø–∞–ª–∞    –Ω–∞ –ª–∞–ø—É –ê–∑–æ—Ä–∞   '

print(is_palindrome(test))